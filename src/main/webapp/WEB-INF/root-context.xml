<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jd="http://www.springframework.org/schema/jdbc"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd
   	  http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
      http://www.springframework.org/schema/jdbc
      http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">

  <context:annotation-config />
  <mvc:annotation-driven />

  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:configuration.properties</value>
      </list>
    </property>
  </bean>

  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basename" value="messages" />
  </bean>
  
  <bean id="affiliationUtil" class="nz.ac.auckland.cer.project.util.AffiliationUtil" />

  <bean id="projectRestTemplate" class="org.springframework.web.client.RestTemplate">
    <property name="messageConverters">
      <list>
        <bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
          <property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>
        </bean>
        <bean id="byteArrayConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
          <property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>
        </bean>
      </list>
    </property>
  </bean>

  <bean id="projectDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${project.jdbc.driver.className}"/>
    <property name="url" value="${project.jdbc.url}"/>
    <property name="username" value="${project.jdbc.username}"/>
    <property name="password" value="${project.jdbc.password}"/>
    <property name="testOnBorrow" value="true"/>
    <property name="validationQuery" value="SELECT 1"/>
    <property name="initialSize" value="3"/>
    <property name="maxActive" value="3"/>
    <property name="maxIdle" value="3"/>
  </bean>

  <bean id="projectSqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="configLocation" value="classpath:mybatis_sql_map_config.xml"/>
    <property name="dataSource" ref="projectDataSource"/>
  </bean>    

  <bean id="projectDao" class="nz.ac.auckland.cer.project.dao.ProjectDatabaseDaoImpl">
    <property name="restBaseUrl" value="${project.rest.baseurl}" />
    <property name="restTemplate" ref="projectRestTemplate" />
    <property name="sqlSessionFactory" ref="projectSqlSessionFactoryBean"/>
    <property name="restRemoteUserHeaderName" value="${project.rest.remoteuser.header.name}"/>
    <property name="restRemoteUserHeaderValue" value="${project.rest.remoteuser.header.value}"/>
    <property name="restAuthzHeaderValue" value="${project.rest.authz.header.value}"/>
  </bean>

  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="host" value="${email.smtp.server}" />
    <property name="port" value="${email.smtp.port}"/>
  </bean>

  <bean id="templateUtil" class="nz.ac.auckland.cer.common.util.TemplateUtil" />

  <bean id="email" class="nz.ac.auckland.cer.common.util.Email" />
  
  <bean id="templateEmail" class="nz.ac.auckland.cer.common.util.TemplateEmail" />

  <bean id="auditUtil" class="nz.ac.auckland.cer.project.util.AuditUtil" />
  
  <bean id="emailUtil" class="nz.ac.auckland.cer.project.util.EmailUtil">
    <property name="emailFrom" value="${email.from}"/>
    <property name="emailTo" value="${email.to}"/>
    <property name="replyTo" value="${email.replyto}"/>
    <property name="projectBaseUrl" value="${project.html.project.baseurl}"/>
    <property name="projectRequestEmailSubject" value="${project.request.email.subject}"/>
    <property name="projectRequestEmailBodyResource" value="${project.request.email.template.path}"/>
    <property name="projectRequestWithSuperviserEmailBodyResource" value="${project.request.with.superviser.email.template.path}"/>
    <property name="membershipRequestEmailSubject" value="${membership.request.email.subject}"/>
    <property name="membershipRequestEmailBodyResource" value="${membership.request.email.template.path}"/>
    <property name="membershipRequestProblemEmailBodyResource" value="${membership.request.problem.email.template.path}"/>
    <property name="otherAffiliationEmailSubject" value="${other.affiliation.email.subject}"/>
    <property name="otherAffiliationEmailBodyResource" value="${other.affiliation.email.template.path}"/>
    <property name="newFollowUpEmailSubject" value="${project.new.followup.email.subject}"/>
    <property name="newFollowUpEmailBodyResource" value="${project.new.followup.email.template.path}"/>
    <property name="newResearchOutputEmailSubject" value="${project.new.researchOutput.email.subject}"/>
    <property name="newResearchOutputEmailBodyResource" value="${project.new.researchOutput.email.template.path}"/>
    <property name="surveyNoticeEmailSubject" value="${survey.notice.email.subject}"/>
    <property name="surveyNoticeBodyResource" value="${survey.notice.email.template.path}"/>
  </bean>

</beans>
